{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filtmonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAKaA,EAAO,SAACC,GAAD,OACpB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAC1B,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCFLC,G,MAAW,SAACR,GAAD,OAEpB,aADA,CACA,OAAKC,UAAU,YAAf,SAEMD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCPlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCqCjEG,E,kDApCb,aAAc,IAAD,8BACX,gBAeFH,aAAc,SAAAI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACXb,SAAS,GAETU,YAAa,IALJ,E,qDAUb,WAAoB,IAAD,OACjBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKT,SAAS,CAACT,SAAUkB,S,oBAO1C,WAAS,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACXU,EAAepB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAChG,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,aAAce,KAAKf,eAC9D,cAAC,EAAD,CAAUJ,SAAUoB,W,GA5BRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0fb8e6bb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\n\r\nexport const Card = (props) =>(\r\n<div className='card-container'>\r\n    <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=120x120`} />\r\n<h2>{props.monster.name}</h2>\r\n<p>{props.monster.email}</p>\r\n</div>\r\n)\r\n","import React from 'react' \r\n\r\nimport {Card} from '../card/card.component.jsx'\r\n\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) => (\r\n    // console.log(props);\r\n    <div className='card-list'>\r\n        {\r\n          props.monsters.map(monster =>(\r\n            <Card key={monster.id} monster={monster} ></Card>\r\n          ))\r\n        }\r\n    </div>\r\n)","import React from 'react' \r\n\r\nimport './search-box.styles.css'\r\n// search-box.styles.css\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) =>(\r\n    <input className='search' type=\"search\" placeholder={placeholder} onChange={handleChange}></input>\r\n)","import './App.css';\nimport {Component}  from 'react';\nimport {CardList} from './components/card-list/card-list.component'\n\nimport {SearchBox} from './components/search-box/search-box.component'\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters:[\n      ],\n      searchField: \"\"\n    };\n\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=>response.json())\n      .then(users=>this.setState({monsters: users}))\n  }\n\n  handleChange= e => {\n    this.setState({searchField: e.target.value})\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filtmonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search monsters' handleChange={this.handleChange}></SearchBox>\n      <CardList monsters={filtmonsters}>\n      </CardList>\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}